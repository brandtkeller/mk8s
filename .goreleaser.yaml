before:
  hooks:
    - go mod tidy

# Build a universal macOS binary
universal_binaries:
  - replace: false

# Build the different combination of goos/arch binaries
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64

# Save the built artifacts as binaries (instead of wrapping them in a tarball)
archives:
  - format: binary
    name_template: "{{ .ProjectName }}_{{ .Tag }}_{{- title .Os }}_{{ .Arch }}"

# generate a sha256 checksum of all release artifacts
checksum:
  name_template: "checksums.txt"
  algorithm: sha256

# generate sboms for each binary artifact
sboms:
  - artifacts: binary
    documents:
      - "sbom_{{ .ProjectName }}_{{ .Tag }}_{{- title .Os }}_{{ .Arch }}.sbom"

snapshot:
  name_template: "{{ incpatch .Version }}-snapshot"

# Use the auto-generated changelog github provides
changelog:
  use: github-native

# Generate a GitHub release and publish the release for the tag
release:
  github:
    owner: mission-focused
    name: mk8s
  prerelease: auto
  mode: append
  draft: true

nightly:
  # Allows you to change the version of the generated nightly release.
  #
  # Note that some pipes require this to be semantic version compliant (nfpm,
  # for example).
  #
  # Default: `{{ incpatch .Version }}-{{ .ShortCommit }}-nightly`.
  # Templates: allowed.
  version_template: "{{ incpatch .Version }}-devel"

  # Tag name to create if publish_release is enabled.
  tag_name: devel

  # Whether to publish a release or not.
  # Only works on GitHub.
  publish_release: true

  # Whether to delete previous pre-releases for the same `tag_name` when
  # releasing.
  # This allows you to keep a single pre-release.
  keep_single_release: true